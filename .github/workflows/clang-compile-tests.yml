name: compile code and tests

on:
  push:
    branches: [ main, develop, xios-interface-with-tests ]
  pull_request:
    branches: [ main, develop, xios-interface-with-tests ]

jobs:

  clang-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: clang
      run: |
        brew extract --version=13.0.1 clang-format homebrew/cask-versions
        brew install clang-format@13.0.1
        cd core/src
        clang-format --dry-run -Werror *cpp include/*hpp
        cd -
        for component in physics
        do
          cd $component/src
          clang-format --dry-run -Werror *cpp include/*hpp
          cd -
        done
  
  
  build-and-tests-on-ubuntu:

    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/nextsimhub/nextsimdg-dev-env:latest

    steps:
    - uses: actions/checkout@v2

    - name: build and compile
      run: |
        . /opt/spack-environment/activate.sh
        mkdir -p build && cd build
        cmake -DENABLE_MPI=ON -Dxios_DIR="/xios" -DENABLE_XIOS=ON -DCMAKE_CXX_COMPILER="$(which mpic++)" ..
        make -j 4

    - name: run tests
      run: |
        . /opt/spack-environment/activate.sh
        apt install -y wget
        cd build
        (cd core/test && wget "ftp://ftp.nersc.no/nextsim/netCDF/partition_metadata_1.nc")
        for component in core physics
        do
            cd $component/test
            # run serial tests
            for file in $(find test* -maxdepth 0 -type f | grep -vP "_MPI\d*$")
            do
              echo $file
              ./$file
            done
            # run MPI tests
            for file in $(find test* -maxdepth 0 -type f | grep -P "_MPI\d+$")
            do
              echo $file
              nprocs=$(echo $file | sed -r "s/.*MPI([0-9]+)/\1/")
              mpirun --allow-run-as-root --oversubscribe -n $nprocs ./$file
            done
            cd -
        done


  build-and-tests-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        brew install netcdf
        brew install netcdf-cxx
        brew install boost
        brew install eigen
        brew install cmake
        pip install numpy
        pip install netCDF4

    # uncomment these lines to debug mac build
    # - name: Setup tmate session
    #   uses: mxschmitt/action-tmate@v3

    - name: make
      run: |
        mkdir -p build
        cd build
        # added Python_ROOT_DIR to help cmake find correct Python in the mac VM
        cmake -DENABLE_MPI=OFF -DENABLE_XIOS=OFF -DPython_ROOT_DIR=/Library/Frameworks/Python.framework/Versions/Current/bin ..
        make -j 4
    - name: run tests
      run: |
        cd build
        for component in core physics
        do
            cd $component/test
            # run serial tests
            for file in $(find test* -maxdepth 0 -type f | grep -vP "_MPI\d*$")
            do
              echo $file
              ./$file
            done
            cd -
        done
