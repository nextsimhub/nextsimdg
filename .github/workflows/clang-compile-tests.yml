name: compile code and tests

on:
  push:
    branches: [ main, develop, issue103_CI ]
  pull_request:
    branches: [ main, develop,  issue103_CI ]

jobs:

  clang-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: clang
      run: |
        brew extract --version=13.0.1 clang-format homebrew/cask
        brew install clang-format@13.0.1
        cd core/src
        clang-format --dry-run -Werror *cpp include/*hpp
        cd -
        for component in physics
        do
          cd $component/src
          clang-format --dry-run -Werror *cpp include/*hpp
          cd -
        done
  
  
  build-and-tests-on-ubuntu:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        sudo apt-get update
        sudo apt-get install netcdf-bin libnetcdf-c++4-dev libboost-all-dev libeigen3-dev cmake
        git clone -b v2.x https://github.com/catchorg/Catch2.git
        cd Catch2
        cmake -Bbuild -H. -DBUILD_TESTING=OFF
        sudo cmake --build build/ --target install
        cd ..
    - name: make
      run: |
        cmake .
        make
    - name: run tests
      run: |
        cd core/test
        for file in $(find test* -maxdepth 0 -type f)
        do
            echo $file
            ./$file
        done
        cd -
        for component in physics
        do
            cd $component/test
            for file in $(find test* -maxdepth 0 -type f)
            do
                echo $file
                ./$file
            done
            cd -
        done


  build-and-tests-on-mac:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: installs
      run: |
        brew install netcdf
        brew install netcdf-cxx
        brew install boost
        brew install eigen
        brew install cmake
        brew extract --version=2.13.9 catch2 homebrew/cask
        brew install catch2@2.13.9
    - name: make
      run: |
        cmake .
        make
    - name: run tests
      run: |
        cd core/test
        for file in $(find test* -maxdepth 0 -type f) 
        do
            echo $file
            ./$file
        done
        cd -
        for component in physics
        do
            cd $component/test
            for file in $(find test* -maxdepth 0 -type f)
            do 
                echo $file
                ./$file
            done
            cd -
        done
